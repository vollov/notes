The best solution for reverse proxy is lighttpd

apt-get install lighttpd
lighttpd-enable-mod
service lighttpd reload

cp /etc/apt/sources.list /etc/apt/sources.list.backup
Type lsb_release -sc to find out your release.
apt-get update

lsb_release -sc

Setting up lighttpd (1.4.28-2ubuntu4) ...
 * Starting web server lighttpd                                                                                                                                             2014-09-12 05:09:42: (network.c.358) can't bind to port:  80 Address already in use 
                                                                                                                                                                     [fail]
invoke-rc.d: initscript lighttpd, action "start" failed.
Processing triggers for libc-bin ...
ldconfig deferred processing now taking place


/etc/lighttpd/lighttpd.conf
server.port = 81

lighty-enable

/etc/init.d/lighttpd force-reload

balancer
----------------------
http://pbrisbin.com/posts/lighttpd_reverse_proxy/

### Proxy redirect rules
$HTTP["host"] == "nthomeservice.ca" {
	proxy.server = (
	    "" => (
	        ("host" => "127.0.0.1", "port" =>3006)
	    )
	)
}

$HTTP["host"] == "vollov.ca" {
	proxy.server = (
	    "" => (
	        ("host" => "127.0.0.1", "port" =>3001)
	    )
	)
}
$HTTP["host"] == "www.vollov.ca" {
	proxy.server = (
	    "" => (
	        ("host" => "127.0.0.1", "port" =>3001)
	    )
	)
}

----------------------
http://redmine.lighttpd.net/boards/2/topics/2473


### Load server modules.
server.modules = (
    "mod_access",
    "mod_proxy",
    "mod_fastcgi",
    "mod_accesslog" 
)

### Set up the pid file.
server.pid-file      = "/var/run/lighttpd.pid" 
server.document-root = "/root/public_html" 
index-file.names     = (
"index.html",
"index.htm",
"default.html",
"default.htm",
"index.php",
"index.php5",
)

### Logging.
accesslog.filename   = "/tmp/lighttpd_access.log" 
server.errorlog      = "/tmp/lighttpd_error.log" 

### Enable directory listing for static image dirs.
$HTTP["url"] =~ "/images" {
    dir-listing.activate = "enable" 
}

######################################################################
### Proxy redirect rules

### THIS PART WORKS FINE.
$HTTP["host"] =~ "mydomain1.com" {
    proxy.server = ("" => ( ("host" => "127.0.0.1", "port" => 2000)))
}
$HTTP["host"] =~ "mydomain1.net" {
    proxy.server = ("" => ( ("host" => "127.0.0.1", "port" => 2000)))
}

### THIS PART DOESN'T WORK
### The first rule works as expected, but the second doesn't and I
### don't know why...  Both services are running on the correct ports.
### Going to http://mydomain2.com does exactly what it should (equivalent
### to mydomain2.com:3000), but http://blog.mydomain2.com just gives an
### error page: "Server not found" 
$HTTP["host"] == "mydomain2.com" {
    proxy.server = ("" => ( ("host" => "127.0.0.1", "port" => 3000)))
}

$HTTP["host"] == "blog.mydomain2.com" {
    proxy.server = ("" => ( ("host" => "127.0.0.1", "port" => 3010)))
}

######################################################################
# mimetype mapping
static-file.exclude-extensions = (
  ".fcgi",
  ".php",
  ".php5",
  ".rb",
  "~",
  ".inc",
  ".pl",
  ".pm",
  ".pmc",

  ### Don't serve config files.
  ".cfg",
  ".config",
  ".conf",

  ### Don't serve vim cache files
  ".swp" 
)

######################################################################
# mimetype mapping
mimetype.assign = (
   ".pdf"     => "application/pdf",
   ".sig"     => "application/pgp-signature",
   ".spl"     => "application/futuresplash",
   ".class"   => "application/octet-stream",
   ".ps"      => "application/postscript",
   ".torrent" => "application/x-bittorrent",
   ".dvi"     => "application/x-dvi",
   ".gz"      => "application/x-gzip",
   ".pac"     => "application/x-ns-proxy-autoconfig",
   ".swf"     => "application/x-shockwave-flash",
   ".tar.gz"  => "application/x-tgz",
   ".tgz"     => "application/x-tgz",
   ".tar"     => "application/x-tar",
   ".zip"     => "application/zip",
   ".mp3"     => "audio/mpeg",
   ".m3u"     => "audio/x-mpegurl",
   ".wma"     => "audio/x-ms-wma",
   ".wax"     => "audio/x-ms-wax",
   ".ogg"     => "audio/x-wav",
   ".wav"     => "audio/x-wav",
   ".gif"     => "image/gif",
   ".jpg"     => "image/jpeg",
   ".jpeg"    => "image/jpeg",
   ".png"     => "image/png",
   ".xbm"     => "image/x-xbitmap",
   ".xpm"     => "image/x-xpixmap",
   ".xwd"     => "image/x-xwindowdump",
   ".css"     => "text/css",
   ".html"    => "text/html",
   ".htm"     => "text/html",
   ".js"      => "text/javascript",
   ".asc"     => "text/plain",
   ".c"       => "text/plain",
   ".conf"    => "text/plain",
   ".text"    => "text/plain",
   ".txt"     => "text/plain",
   ".dtd"     => "text/xml",
   ".xml"     => "text/xml",
   ".mpeg"    => "video/mpeg",
   ".mpg"     => "video/mpeg",
   ".mov"     => "video/quicktime",
   ".qt"      => "video/quicktime",
   ".avi"     => "video/x-msvideo",
   ".asf"     => "video/x-ms-asf",
   ".asx"     => "video/x-ms-asf",
   ".wmv"     => "video/x-ms-wmv",
   ".bz2"     => "application/x-bzip",
   ".tbz"     => "application/x-bzip-compressed-tar",
   ".tar.bz2" => "application/x-bzip-compressed-tar" 
)